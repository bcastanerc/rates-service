openapi: 3.0.3
info:
  title: Rates service API
  description: Rates service public API
  termsOfService: none
  contact:
    email: admin@virtualcave.io
  license:
    name: Virtualcave
    url: https://virtualcave.io
  version: "1.0-SNAPSHOT"
tags:
- name: rates
  description: Available operations for rates service.
paths:
  /v1/rates:
    post:
      tags:
      - rates
      summary: Create a new Rate
      operationId: addRate
      requestBody:
        description: Use the required fields to create a new rate.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateRequest'
        required: true
      responses:
        200:
          description: Created rate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rate'
        422:
          $ref: '#/components/responses/UnprocessableEntityError'
        503:
          $ref: '#/components/responses/ServiceUnavailableError'
      x-codegen-request-body-name: body
    get:
      tags:
      - rates
      summary: Find Rates given product, brand and start date
      description: Find Rates by a start date, product's id and brand's id
      operationId: findRateByProductAndBrand
      parameters:
      - in: query
        name: startDate
        description: The rate creation timestamp
        required: true
        schema:
          type: string
          format: date
          example: "2022-02-21"
      - in: query
        name: brandId
        description: Brand Id
        required: true
        schema:
          type: string
      - in: query
        name: productId
        description: Product Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Succesful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rate'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFoundError'
        422:
          $ref: '#/components/responses/UnprocessableEntityError'
  /v1/rates/{id}:
    get:
      tags:
      - rates
      summary: Get a specific rate
      description: Get the rate by the id rate
      operationId: findRateById
      parameters:
      - name: id
        in: path
        description: Rate Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rate'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFoundError'
    patch:
      tags:
      - rates
      summary: Updated rate price
      description: Update the price of a given rate by its id
      operationId: updateRateById
      parameters:
      - name: id
        in: path
        description: Rate Id
        required: true
        schema:
          type: string
      - name: price
        in: query
        description: The modified price of the rate
        required: true
        schema:
          type: string
      responses:
        200:
          description: Rate successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rate'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFoundError'
      x-codegen-request-body-name: body
    delete:
      tags:
      - rates
      summary: Delete a rate
      description: Delete a rate given a id rate
      operationId: deleteById
      parameters:
      - name: id
        in: path
        description: Rate Id
        required: true
        schema:
          type: string
      responses:
        204:
          description: Succesful Operation
          content: {}
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFoundError'
components:
  headers:
    xTotalItems:
      description: Total number of items in resultset
      schema:
        type: integer
        example: 10
    xTotalPages:
      description: Total number of pages in resultset
      schema:
        type: integer
        example: 1
  schemas:
    RateRequest:
      type: object
      required:
      - brandId
      - productId
      properties:
        brandId:
          type: string
          description: The brand identifier
          example: "23"
        productId:
          type: string
          description: The product identifier
          example: "30"
        endDate:
          type: string
          format: date
          description: The contract request creation timestamp
          example: "2017-07-21"
        currencyCode:
          type: string
          description: The ISO 4217 code of the currency
          example: "EUR"
        totalAmount:
          type: integer
          description: the total amount non formatted with out decimals
          example: 1704
    Rate:
      type: object
      required:
      - id
      - brandId
      - productId
      properties:
        id:
          type: integer
          description: The rate request identifier
          example: "124"
        brandId:
          type: string
          description: The brand identifier
          example: "23"
        productId:
          type: string
          description: The product identifier
          example: "30"
        startDate:
          type: string
          format: date
          description: The rate starting date
          example: "2017-07-21"
        endDate:
          type: string
          format: date
          description: The rate ending date
          example: "2017-07-21"
        amount:
          $ref: '#/components/schemas/Amount'
    Amount:
      type: object
      properties:
        value:
          type: integer
          description: Monetary value non formated
          example: 1704
        code:
          type: string
          description: ISO 4217 currency CODE
          default: EUR
          example: EUR
        symbol:
          type: string
          description: Symbol of the selected currency
          example: €
          default: €
        decimals:
          type: integer
          description: Decimal index (value / 10^exponent)
          default: 0
          example: 3
  responses:
    BadRequest:
      description: Malformed request or invalid type send
    UnauthorizedError:
      description: Authentication is required to get the requested response
    ForbiddenError:
      description: The client does not have the necessary permissions for certain content, so the server is refusing to grant an appropriate response
    NotFoundError:
      description: Resource not found
    ConflictError:
      description: Request conflict with current state of the target resource
    UnprocessableEntityError:
      description: Invalid input
    ServiceUnavailableError:
      description: Rates service unavailable